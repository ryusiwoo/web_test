// üîΩ Firebase ÏÑ§Ï†ï
const firebaseConfig = {
  apiKey: "AIzaSyBPHER9uMFWodYGEVsdj2KGY_m8HEOCUAQ",
  authDomain: "comments-24767.firebaseapp.com",
  databaseURL: "https://comments-24767-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId: "comments-24767",
  storageBucket: "comments-24767.appspot.com",
  messagingSenderId: "559876960346",
  appId: "1:559876960346:web:faf067629f4c00497de863",
  measurementId: "G-T2DTS2SY4D"
};

firebase.initializeApp(firebaseConfig);
const db = firebase.database();

// ‚úÖ Í¥ÄÎ¶¨Ïûê UID (ÎÇòÏ§ëÏóê ÌôïÏù∏ ÌõÑ Ïù¥ Í∞íÏúºÎ°ú Î∞îÍæ∏ÏÑ∏Ïöî)
const ADMIN_UID = "Í¥ÄÎ¶¨Ïûê_UID_Ïó¨Í∏∞Ïóê_ÏûÖÎ†•";

// ‚úÖ Î°úÍ∑∏Ïù∏ ÏÉÅÌÉú Ï†ÄÏû•Ïö© Ï†ÑÏó≠ Î≥ÄÏàò
let currentUser = null;

// üîë ÌòÑÏû¨ URLÏùò ÏÑúÎ∏åÎèÑÎ©îÏù∏ÏùÑ photoIdÎ°ú ÏÇ¨Ïö©
const host = window.location.hostname;
const photoId = host.split('.')[0];
const commentsRef = db.ref('comments/' + photoId);

// ‚úÖ ÏûêÎèô ÏùµÎ™Ö Î°úÍ∑∏Ïù∏ ÏãúÎèÑ
firebase.auth().onAuthStateChanged(user => {
  if (user) {
    currentUser = user;
    console.log("Î°úÍ∑∏Ïù∏Îê®. UID:", user.uid);
  } else {
    // ÏùµÎ™Ö Î°úÍ∑∏Ïù∏
    firebase.auth().signInAnonymously()
      .then(() => console.log("ÏùµÎ™Ö Î°úÍ∑∏Ïù∏ ÏôÑÎ£å"))
      .catch(error => console.error("ÏùµÎ™Ö Î°úÍ∑∏Ïù∏ Ïã§Ìå®:", error));
  }
});

// üìù ÎåìÍ∏Ä Î™©Î°ù Í¥ÄÎ†® Î≥ÄÏàò
let allComments = [];
let expanded = false;

// üîÑ ÎåìÍ∏Ä Î∂àÎü¨Ïò§Í∏∞
commentsRef.on('value', snapshot => {
  const comments = snapshot.val();
  if (comments) {
    allComments = Object.entries(comments)
      .map(([id, data]) => ({ id, ...data }))
      .sort((a, b) => b.timestamp - a.timestamp);
    renderComments();
  } else {
    allComments = [];
    renderComments();
  }
});

// üí¨ ÎåìÍ∏Ä Î†åÎçîÎßÅ
function renderComments() {
  const commentsDiv = document.getElementById('comments');
  commentsDiv.innerHTML = '';

  const commentsToShow = expanded ? allComments : allComments.slice(0, 5);

  commentsToShow.forEach(comment => {
    const date = new Date(comment.timestamp);
    const timeString = date.toLocaleString('ko-KR', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    });

    const div = document.createElement('div');
    div.className = 'comment';
    div.innerHTML = `
      ${comment.message}<br>
      <small style="color:gray;">${timeString}</small>
    `;

    // üóëÔ∏è Í¥ÄÎ¶¨ÏûêÏùº Í≤ΩÏö∞ ÏÇ≠Ï†ú Î≤ÑÌäº Ï∂îÍ∞Ä
    if (currentUser && currentUser.uid === ADMIN_UID) {
      const deleteBtn = document.createElement('button');
      deleteBtn.textContent = 'ÏÇ≠Ï†ú';
      deleteBtn.style.marginTop = '5px';
      deleteBtn.onclick = () => deleteComment(comment.id);
      div.appendChild(deleteBtn);
    }

    commentsDiv.appendChild(div);
  });

  const toggleButton = document.getElementById('toggleButton');
  toggleButton.style.display = allComments.length > 5 ? 'block' : 'none';
  toggleButton.innerText = expanded ? 'Í∞ÑÎã®Ìûà Î≥¥Í∏∞' : 'Îçî Î≥¥Í∏∞';
}

// üîÄ Îçî Î≥¥Í∏∞ / Í∞ÑÎã®Ìûà Î≥¥Í∏∞
function toggleComments() {
  expanded = !expanded;
  renderComments();
}

// ‚úÖ ÎåìÍ∏Ä ÏûëÏÑ±
function submitComment() {
  const message = document.getElementById('message').value.trim();
  if (!message) {
    alert("ÎåìÍ∏ÄÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
    return;
  }

  const newCommentRef = commentsRef.push();
  newCommentRef.set({
    message: message,
    timestamp: Date.now(),
    userId: currentUser ? currentUser.uid : null
  });

  document.getElementById('message').value = '';
}

// üóëÔ∏è ÎåìÍ∏Ä ÏÇ≠Ï†ú (Í¥ÄÎ¶¨ÏûêÎßå Í∞ÄÎä•)
function deleteComment(commentId) {
  if (currentUser && currentUser.uid === ADMIN_UID) {
    commentsRef.child(commentId).remove()
      .then(() => console.log("ÎåìÍ∏Ä ÏÇ≠Ï†ú ÏôÑÎ£å"))
      .catch(error => console.error("ÎåìÍ∏Ä ÏÇ≠Ï†ú Ïã§Ìå®:", error));
  } else {
    alert("Í¥ÄÎ¶¨ÏûêÎßå ÎåìÍ∏ÄÏùÑ ÏÇ≠Ï†úÌï† Ïàò ÏûàÏäµÎãàÎã§.");
  }
}

// ‚å®Ô∏è Enter ÌÇ§Î°ú ÎåìÍ∏Ä Îì±Î°ù
document.getElementById('message').addEventListener('keydown', function(event) {
  if (event.key === 'Enter') {
    event.preventDefault();
    submitComment();
  }
});

// üîê Í¥ÄÎ¶¨Ïûê Î°úÍ∑∏Ïù∏ (Ïù¥Î©îÏùº/ÎπÑÎ∞ÄÎ≤àÌò∏)
function signInWithEmailPassword() {
  const email = prompt("Í¥ÄÎ¶¨Ïûê Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî");
  const password = prompt("ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî");

  firebase.auth().signInWithEmailAndPassword(email, password)
    .then((userCredential) => {
      currentUser = userCredential.user;
      alert("Í¥ÄÎ¶¨Ïûê Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ");
      renderComments(); // ÏÇ≠Ï†ú Î≤ÑÌäº Í∞±Ïã†
    })
    .catch((error) => {
      alert("Î°úÍ∑∏Ïù∏ Ïã§Ìå®: " + error.message);
    });
}
